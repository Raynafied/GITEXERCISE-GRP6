import tkinter as tk
from tkinter import messagebox
import shelve
import json

def submitbutton():
    if any(var.get() for var in check_vars1):
        submit_button1.config(state=tk.NORMAL)
    else:
        submit_button1.config(state=tk.DISABLED)

def submitselections():
    selected_days = [day for day, var in zip(days_of_week, check_vars1) if var.get()]
    print(f"Week {week}: Selected Days: {selected_days}")
    
    # Save the next week number
    with shelve.open('week_data') as db:
        db['week'] = week + 1
    
    messagebox.showinfo("Success", f"Week {week} submitted! Moving to Week {week + 1}.")
    show_frame(main_page)

def submitbutton1():
    if any(var.get() for var in check_vars2):
        submit_button2.config(state=tk.NORMAL)
    else:
        submit_button2.config(state=tk.DISABLED)

def submitselections1():
    choose_options = [day for day, var in zip(a_week_of_days, check_vars2) if var.get()]
    print(f"Week {week}: Selected Days: {choose_options}")
    
    # Save the next week number
    with shelve.open('week_data') as db:
        db['week'] = week + 1
    
    messagebox.showinfo("Success", f"Week {week} submitted! Moving to Week {week + 1}.")
    show_frame(main_page)


def reset_week():
    with shelve.open('week_data') as db:
        db['week'] = 1
    messagebox.showinfo("Reset", "Week number reset to 1.")
    # Reload the week number and update UI
    global week
    week = 1
    week_label.config(text=f"Select days for Week {week}")

def save_to_json(data, filename='data.json'):
    with open(filename, 'w') as file:
        json.dump(data, file, indent=4)
    messagebox.showinfo("Success", f"Data saved to {filename}")

def load_choice(filename='choice.txt'):
    try:
        with open(filename, 'r') as file:
            return file.read().strip()
    except FileNotFoundError:
        return None

def show_frame(frame):
    frame.tkraise()

root = tk.Tk()
root.geometry('500x500')
root.title('Planner')

with shelve.open('week_data') as db:
    week = db.get('week', 1)

main_page = tk.Frame(root)
week_page = tk.Frame(root)
page1 = tk.Frame(root)


for frame in (main_page, week_page, page1):
    frame.place(relx=0, rely=0, relwidth=1, relheight=1)

label1 = tk.Label(main_page, text="Keep yourself updated", font=('Arial', 16))
label1.pack()

pageA_button = tk.Button(main_page, text='Submit your weekly progress', font=('Arial', 12), command=lambda: show_frame(week_page))
pageA_button.pack()

pageB_button = tk.Button(main_page, text="Weekly Health Update", font=('Arial', 12), command=lambda: show_frame(page1))
pageB_button.pack()

week_label = tk.Label(week_page, text=f"Select days for Week {week}", font=("Arial", 14))
week_label.pack(pady=10)

reset_button = tk.Button(main_page, text="Reset to Week 1", command=reset_week)
reset_button.pack(pady=5)

days_of_week = ["day 1", "day 2", "day 3", "day 4", "day 5", "day 6", "day 7"]
check_vars1 = []

for day in days_of_week:
    var = tk.IntVar()
    check_vars1.append(var)
    chk = tk.Checkbutton(week_page, text=day, variable=var, command=submitbutton)
    chk.pack(anchor='w')

submit_button1 = tk.Button(week_page, text="Submit", state=tk.DISABLED, command=submitselections)
submit_button1.pack(pady=20)
back_button1 = tk.Button(week_page, text="Back to Main Page", command=lambda: show_frame(main_page))
back_button1.pack(pady=10)




#2
labelA1 = tk.Label(page1, text="Track your menstrual cycle")
labelA1.pack()

check_vars2 = []
a_week_of_days = ["7 days", "6 days", "5 days", "4 days", "3 days"]

for day in a_week_of_days:
    var = tk.IntVar()
    check_vars2.append(var)
    chk = tk.Checkbutton(page1, text=day, variable=var, command=submitbutton1)
    chk.pack(anchor='w')

submit_button2 = tk.Button(page1, text="Submit", state=tk.DISABLED, command=submitselections1)
submit_button2.pack(pady=20)
back_button2 = tk.Button(page1, text="Back to Main Page", command=lambda: show_frame(main_page))
back_button2.pack(pady=10)
show_frame(main_page)
root.mainloop()
